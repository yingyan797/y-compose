Boolean label -> b := +p | -p | b ^ b | b v b | T

Atomic task ->   a := b U b

Formula     ->   f := +a | -a | f ^ f | f v f | f U f | f ; f | G f

#((a U b) & (c U d));
var2 $ where ~ex1 p where true: p notin $ & p+1 in $;
allpos $;
var2 A, B, C, D;
((ex1 v_1: v_1 in $ & 0<=v_1&v_1<=max($) & (v_1 in B) & (all1 v_2: v_2 in $ & 0<=v_2&v_2<v_1 => (v_2 in A))) & (ex1 v_1: v_1 in $ & 0<=v_1&v_1<=max($) & (v_1 in D) & (all1 v_2: v_2 in $ & 0<=v_2&v_2<v_1 => (v_2 in C))));

G((0<v<=2) & (A -> v<=1)) & ((x>=1.5) U A) & ((y<=17) U b)

The robot is tasked with the following temporal logic specification: G((0<v<=2) & (A -> v<=1)) & ((x>=1.5) U A) & ((y<=17) U b), where 'G' means "always", 'U' means "until", '&' means conjunction, '->' means "imples", 'A'/'B' means the robot is inside the rectangular region A/B. What is the minimum time the robot needs to complete the task? 

In rectangle A the speed limit is 1, and in any other location, there is a speed limit of 2. The robot needs to achieve the following tasks in any order: 1. By the time x reaches 1.5, the robot must have visited rectangle A; 2. By the time y reaches 17 the robot must have visited rectangle B. What is the minimum time the robot needs to achieve both tasks subject to speed limits?